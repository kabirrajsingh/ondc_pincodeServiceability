import functions_framework
import os,time
from dotenv import load_dotenv
import json
from drie_redis import DoubleTrie
from utils import RedisClient
import redis
from drie_redis import DoubleTrie
import traceback
from flask import jsonify

load_dotenv()

#create the drie object

def establish_conn():
  redis_client=RedisClient(host="10.196.16.3", port="6379", db=0, decode_responses=True)
  drieObj=DoubleTrie(redis_client)
  drieObj.load_from_db()

  return redis_client,drieObj

redis_client,drieObj=establish_conn()

@functions_framework.http
def handle(request):
  global redis_client
  global drieObj
  if not redis_client or not drieObj:
    redis_client,drieObj=establish_conn()

  company=request.values.get("company",None)
  pincode=request.values.get("pincode",None)

  try:
    if company and pincode:
      response={"message":drieObj.validate_company_pincode(company,pincode)}
      status=200
    elif company:
      response={"message":drieObj.get_pincodes(company)}
      status=200
    elif pincode:
      response={"message":drieObj.get_companies(pincode)}
      status=200
    else:
      response={"message":"Put atleast company or pincode"}
      status=400

    return add_cors_headers(jsonify(response)),status
  except Exception as exc:
    response={"message":f"Error occurred: {exc}"}
    status=400
    traceback.print_exc()

    return add_cors_headers(jsonify(response)),status

    


def add_cors_headers(response):
    response.headers.add("Access-Control-Allow-Origin", "*")
    response.headers.add("Access-Control-Allow-Methods", "GET, PUT, DELETE, POST")
    response.headers.add("Access-Control-Allow-Headers", "Content-Type")
    return response
